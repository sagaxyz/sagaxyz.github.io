(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{289:function(e,n,t){"use strict";t.r(n);var a=t(13),s=Object(a.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"chainletd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chainletd"}},[e._v("#")]),e._v(" "),n("code",[e._v("chainletd")])]),e._v(" "),n("p",[n("code",[e._v("chainletd")]),e._v(" is the command used to access the "),n("code",[e._v("chainletd")]),e._v(" command in each chainlet. It is also the daemon used to start each individual chainlet.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('saga chainletd --help\nUse the chainletd CLI. \n\neg.\nsaga chainletd --name test status \\\nsaga chainletd --name test q bank total\n\nUsage:\n  saga chainletd [subcommand] [subcommand] [args] [flags]\n\nFlags:\n  -h, --help          help for chainletd\n  -n, --name string   Name of the chainlet (default "test")\n\nGlobal Flags:\n  -l, --loglevel string   Log level (default "info")\n')])])]),n("p",[n("code",[e._v("chainletd")]),e._v(" also utilizes cobra, so you would be able to access information about the available commands by either entering it in or adding "),n("code",[e._v("--help")]),e._v(".")]),e._v(" "),n("p",[e._v("Note: when passing flags to the "),n("code",[e._v("chainletd")]),e._v(" command, the respect series of commands following "),n("code",[e._v("chainletd")]),e._v(" should be encapsulated in quotes.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('Chainlet Daemon\n\nUsage:\n  chainletd [command]\n\nAvailable Commands:\n  add-genesis-account Add a genesis account to genesis.json\n  collect-gentxs      Collect genesis txs and output a genesis.json file\n  config              Create or query an application CLI configuration file\n  debug               Tool for helping with debugging your application\n  export              Export state to JSON\n  gentx               Generate a genesis tx carrying a self delegation\n  help                Help about any command\n  index-eth-tx        Index historical eth txs\n  init                Initialize private validator, p2p, genesis, and application configuration files\n  keys                Manage your application\'s keys\n  migrate             Migrate genesis to a specified target version\n  query               Querying subcommands\n  rollback            rollback cosmos-sdk and tendermint state by one height\n  rosetta             spin up a rosetta server\n  start               Run the full node\n  status              Query remote node for status\n  tendermint          Tendermint subcommands\n  testnet             subcommands for starting or configuring local testnets\n  tx                  Transactions subcommands\n  validate-genesis    validates the genesis file at the default location or at the location passed as an arg\n  version             Print the application binary version information\n\nFlags:\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default "sync")\n      --chain-id string          Specify Chain ID for sending Tx (default "testnet")\n      --fees string              Fees to pay along with transaction; eg: 10aphoton\n      --from string              Name or address of private key with which to sign\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices to determine the transaction fee (e.g. 10aphoton)\n  -h, --help                     help for chainletd\n      --home string              directory for config and data (default "/Users/b/.chainletd")\n      --keyring-backend string   Select keyring\'s backend (default "os")\n      --log_format string        The logging format (json|plain) (default "plain")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")\n      --trace                    print out full stack trace on errors\n\nUse "chainletd [command] --help" for more information about a command.\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);